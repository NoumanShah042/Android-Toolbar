tool bar
action bar
app bar


https://developer.android.com/training/appbar




1) In the app manifest, set the <application> element to use one of appcompat's NoActionBar themes

change theme from 
android:theme="@style/Theme.Toolbar"   to   android:theme="@style/Theme.AppCompat.Light.NoActionBar"

OR
 change in the res -> values -> themes-> themes.xml ->  <style name="Theme.Toolbar" parent="Theme.MaterialComponents.Light.NoActionBar">


***************************
create menu folder:

res -> new -> android resource directory
resource type : menu
menu -> new -> new resource file -> toolbarmenu


create icons to use:

drawable ->new -> new vector asset

***************************

coding 

IN menubar.xml file:

<?xml version="1.0" encoding="utf-8"?>
<menu xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto">

    <item
        android:id="@+id/id_search"
        android:icon="@drawable/ic_search_24"
        android:title="Seacrh"
        app:showAsAction="ifRoom" />

    <item
        android:id="@+id/id_setting"
        android:icon="@drawable/ic_settings_24"
        android:title="setting"
        app:showAsAction="ifRoom" />

    <item
        android:id="@+id/id_share"
        android:title="Share"
        app:showAsAction="never" />

    <item
        android:id="@+id/id_about"
        android:title="About"
        app:showAsAction="never" />

    <item
        android:id="@+id/id_Exit"
        android:title="Exit"
        app:showAsAction="never" />
</menu>

    <!--

	
     https://material.io/components/app-bars-top#anatomy

     title : name for items in dropdown or
             for icons, title shows if we hold that icon


      extendable menu

      showAsAction attributes:
           never : never show it as icon
           always: always show as icon
           ifRoom : show as icon if space available
           withText :  show it as text ( show it in extendable menu ,   similar to never )
           collapseActionView  ; for dynamic views in menu_bar
 -->

***************************

activity_main.xml

<?xml version="1.0" encoding="utf-8"?>
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <androidx.appcompat.widget.Toolbar
        android:id="@+id/toolbar"
        android:layout_width="match_parent"
        android:layout_height="?actionBarSize"
        android:background="@color/design_default_color_primary"
        android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
        app:logo="@drawable/ic_menu_24"
        app:title="@string/app_name"
        app:titleMarginStart="30dp" />

</RelativeLayout>

***************************

mainactivity.java


package com.example.toolbar;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;
import androidx.appcompat.widget.Toolbar;

import android.os.Bundle;
import android.view.Menu;
import android.view.MenuItem;
import android.widget.Toast;

public class MainActivity extends AppCompatActivity {
    Toolbar toolbar;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
    }

    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        //  this method will run when our menu bar is created
        getMenuInflater().inflate(R.menu.toolbarmenu, menu);
        return true; // true means we have successfully inflated our own menu_bar
    }

    @Override
    public boolean onOptionsItemSelected(@NonNull MenuItem item) {
        switch (item.getItemId()) {
            case R.id.id_share:
                Toast.makeText(this, "Share", Toast.LENGTH_SHORT).show();
                break;
            case R.id.id_about:
                Toast.makeText(this, "About", Toast.LENGTH_SHORT).show();
                break;
            case R.id.id_setting:
                Toast.makeText(this, "Setting", Toast.LENGTH_SHORT).show();
                break;
            case R.id.id_search:
                Toast.makeText(this, "Search", Toast.LENGTH_SHORT).show();
                break;
            case R.id.id_Exit:
                Toast.makeText(this, "Exit", Toast.LENGTH_SHORT).show();
                break;
            default:
                break;
        }
        return true;
    }
}


***************************